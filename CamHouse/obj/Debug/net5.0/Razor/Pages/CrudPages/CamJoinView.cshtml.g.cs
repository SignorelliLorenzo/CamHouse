#pragma checksum "C:\Users\Gabry\source\repos\CamHouse\CamHouse\Pages\CrudPages\CamJoinView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "651954b0ab4900598689e2bf2e41d9fe91451744"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(CamHouse.Pages.CrudPages.Pages_CrudPages_CamJoinView), @"mvc.1.0.razor-page", @"/Pages/CrudPages/CamJoinView.cshtml")]
namespace CamHouse.Pages.CrudPages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Gabry\source\repos\CamHouse\CamHouse\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Gabry\source\repos\CamHouse\CamHouse\Pages\_ViewImports.cshtml"
using CamHouse;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Gabry\source\repos\CamHouse\CamHouse\Pages\_ViewImports.cshtml"
using CamHouse.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"651954b0ab4900598689e2bf2e41d9fe91451744", @"/Pages/CrudPages/CamJoinView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"deeccac994344a9c6ecae0dba1c724d94104540c", @"/Pages/_ViewImports.cshtml")]
    public class Pages_CrudPages_CamJoinView : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Gabry\source\repos\CamHouse\CamHouse\Pages\CrudPages\CamJoinView.cshtml"
  
    Layout = "~/Pages/Layout/_CamJoinViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"Body-CamJoinView\">\r\n    <!-- Body Login -->\r\n    <div class=\"row Row-mid\">\r\n        <div class=\"colcustom10\">\r\n\r\n            <div class=\"Zone-img\">\r\n                <div class=\"Zone-img-view\">\r\n");
            WriteLiteral("                    <img id=\"video\"");
            BeginWriteAttribute("src", " src=\"", 4017, "\"", 4076, 2);
            WriteAttributeValue("", 4023, "https://localhost:5001/api/url=", 4023, 31, true);
#nullable restore
#line 15 "C:\Users\Gabry\source\repos\CamHouse\CamHouse\Pages\CrudPages\CamJoinView.cshtml"
WriteAttributeValue("", 4054, Model.telecamera.link, 4054, 22, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
                </div>
                 <div class=""Zone-img-stats"">
                    <p class=""Zone-img-stats-title""></p>
                    <a class=""Zone-img-stats-like""><i class='bx bx-like'></i> Like</a>
                    <a class=""Zone-img-stats-pref""><i class='bx bx-bookmarks'></i> Preferiti</a>
                     <p id=""ciao""/>
                </div>
            </div>

        </div>
    </div>
</div>
<script>
    //window.onload = function () {
    //    var image = document.getElementById(""video"");

    //    function updateImage() {
    //        image.src = image.src.split(""?"")[0] + ""?"" + new Date().getTime();
    //    }

    //    setInterval(updateImage, 1000);
    //}
    function refresh(node) {
        var times = 3000; // gap in Milli Seconds;

        (function startRefresh() {
            var address;
            if (node.src.indexOf('?') > -1)
                address = node.src.split('?')[0];
            else
                address = node.src;");
            WriteLiteral(@"
            node.src = address + ""?time="" + new Date().getTime();

            setTimeout(startRefresh, times);
        })();

    }

    window.onload = function () {
        var node = document.getElementById('video');
        refresh(node);
        // you can refresh as many images you want just repeat above steps
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CamHouse.Pages.CrudPages.CamJoinViewModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<CamHouse.Pages.CrudPages.CamJoinViewModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<CamHouse.Pages.CrudPages.CamJoinViewModel>)PageContext?.ViewData;
        public CamHouse.Pages.CrudPages.CamJoinViewModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
